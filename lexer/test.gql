schema @test {
    query: Query
    mutation: Mutation
}

type Query {
    hero(episode: Episode): Character
    human(id: ID!): Human
    droid(id: ID!): Droid
    search(text: String): SearchResult
}

type Mutation {
    createReview(episode: Episode!, review: ReviewInput!): ReviewInput
}

enum Episode {
    NEWHOPE
    EMPIRE
    JEDI
}

interface Character {
    id: ID!,
    name: String!,
    appearsIn: [Episode]!,
    friends: [Character],
}

type Human implements Character {
    id: ID!
    name: String!
    friends: [Character]
    appearsIn: [Episode]!
    starships: [Starship]
    totalCredits: Int
}

type Droid implements Character {
    id: ID!
    name: String!
    friends: [Character]
    appearsIn: [Episode]!
    primaryFunction: String
}

enum LengthUnit {
    FOOT
    METER
}

type Starship {
    id: ID!
    name: String!
    length(unit: LengthUnit = METER): Float
}

union SearchResult = Human | Droid | Starship

input ReviewInput {
    stars: Int!
    commentary: String
}